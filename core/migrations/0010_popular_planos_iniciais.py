# Generated by Django 5.0.1 on 2025-01-15

from django.db import migrations
from django.utils import timezone
from datetime import date

def criar_planos_iniciais(apps, schema_editor):
    """Cria os 3 planos iniciais do sistema"""
    Plano = apps.get_model('core', 'Plano')
    
    # Plano Starter
    Plano.objects.create(
        nome='starter',
        titulo='Plano Starter',
        descricao='Ideal para quem está começando. Site responsivo, gestão básica de produtos e pedidos.',
        preco_mensal=69.00,
        preco_setup=150.00,
        limite_pedidos_mes=500,
        limite_produtos=50,
        limite_funcionarios=1,
        limite_lojas=1,
        permite_pagamento_online=False,
        permite_cupons_desconto=False,
        permite_whatsapp_bot=False,
        permite_impressao_termica=True,
        permite_relatorios_avancados=False,
        permite_api_integracao=False,
        permite_area_entregador=False,
        permite_multi_loja=False,
        ativo=True,
        ordem_exibicao=1,
        destaque=False
    )
    
    # Plano Pro
    Plano.objects.create(
        nome='pro',
        titulo='Plano Pro',
        descricao='Para estabelecimentos que querem mais recursos. Pagamentos online, cupons, WhatsApp Bot.',
        preco_mensal=129.00,
        preco_setup=300.00,
        limite_pedidos_mes=2000,
        limite_produtos=200,
        limite_funcionarios=5,
        limite_lojas=1,
        permite_pagamento_online=True,
        permite_cupons_desconto=True,
        permite_whatsapp_bot=True,
        permite_impressao_termica=True,
        permite_relatorios_avancados=True,
        permite_api_integracao=False,
        permite_area_entregador=False,
        permite_multi_loja=False,
        ativo=True,
        ordem_exibicao=2,
        destaque=True  # Plano recomendado
    )
    
    # Plano Multi-Loja
    Plano.objects.create(
        nome='multi',
        titulo='Plano Multi-Loja',
        descricao='Para empresas com múltiplas lojas. Recursos ilimitados, API para integração e área do entregador.',
        preco_mensal=249.00,
        preco_setup=800.00,
        limite_pedidos_mes=None,  # Ilimitado
        limite_produtos=None,     # Ilimitado
        limite_funcionarios=50,   # Limite alto
        limite_lojas=999,         # Praticamente ilimitado
        permite_pagamento_online=True,
        permite_cupons_desconto=True,
        permite_whatsapp_bot=True,
        permite_impressao_termica=True,
        permite_relatorios_avancados=True,
        permite_api_integracao=True,
        permite_area_entregador=True,
        permite_multi_loja=True,
        ativo=True,
        ordem_exibicao=3,
        destaque=False
    )

def remover_planos(apps, schema_editor):
    """Remove os planos criados (rollback)"""
    Plano = apps.get_model('core', 'Plano')
    Plano.objects.filter(nome__in=['starter', 'pro', 'multi']).delete()

class Migration(migrations.Migration):

    dependencies = [
        ('core', '0009_plano_restaurante_data_inicio_plano_and_more'),
    ]

    operations = [
        migrations.RunPython(criar_planos_iniciais, remover_planos),
    ]