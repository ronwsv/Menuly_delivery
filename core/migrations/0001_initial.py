# Generated by Django 5.2.4 on 2025-08-04 13:24

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Categoria",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("nome", models.CharField(max_length=100)),
                ("slug", models.SlugField(blank=True, max_length=100)),
                ("descricao", models.TextField(blank=True)),
                (
                    "imagem",
                    models.ImageField(blank=True, null=True, upload_to="categorias/"),
                ),
                ("ordem", models.PositiveIntegerField(default=0)),
                ("ativo", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Categoria",
                "verbose_name_plural": "Categorias",
                "db_table": "categorias",
                "ordering": ["ordem", "nome"],
            },
        ),
        migrations.CreateModel(
            name="OpcaoPersonalizacao",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "nome",
                    models.CharField(
                        help_text="Ex: Tamanho, Sabor, Adicionais", max_length=100
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("radio", "Seleção Única"),
                            ("checkbox", "Múltipla Escolha"),
                            ("select", "Lista Suspensa"),
                        ],
                        default="radio",
                        max_length=20,
                    ),
                ),
                ("obrigatorio", models.BooleanField(default=False)),
                ("ordem", models.PositiveIntegerField(default=0)),
                ("ativo", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Opção de Personalização",
                "verbose_name_plural": "Opções de Personalização",
                "db_table": "opcoes_personalizacao",
                "ordering": ["ordem"],
            },
        ),
        migrations.CreateModel(
            name="Usuario",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "tipo_usuario",
                    models.CharField(
                        choices=[
                            ("cliente", "Cliente"),
                            ("funcionario", "Funcionário"),
                            ("gerente", "Gerente"),
                            ("lojista", "Lojista"),
                            ("superadmin", "Super Admin"),
                        ],
                        default="cliente",
                        max_length=20,
                    ),
                ),
                (
                    "celular",
                    models.CharField(
                        max_length=15,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Número de telefone deve estar no formato: '+999999999'. Até 15 dígitos permitidos.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                ("data_nascimento", models.DateField(blank=True, null=True)),
                (
                    "cpf",
                    models.CharField(blank=True, max_length=14, null=True, unique=True),
                ),
                (
                    "avatar",
                    models.ImageField(blank=True, null=True, upload_to="avatars/"),
                ),
                ("ativo", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuário",
                "verbose_name_plural": "Usuários",
                "db_table": "usuarios",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Endereco",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "nome",
                    models.CharField(
                        help_text="Ex: Casa, Trabalho, etc.", max_length=100
                    ),
                ),
                ("cep", models.CharField(max_length=10)),
                ("logradouro", models.CharField(max_length=200)),
                ("numero", models.CharField(max_length=10)),
                ("complemento", models.CharField(blank=True, max_length=100)),
                ("bairro", models.CharField(max_length=100)),
                ("cidade", models.CharField(max_length=100)),
                ("estado", models.CharField(max_length=2)),
                ("ponto_referencia", models.TextField(blank=True)),
                ("principal", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enderecos",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Endereço",
                "verbose_name_plural": "Endereços",
                "db_table": "enderecos",
            },
        ),
        migrations.CreateModel(
            name="ItemPersonalizacao",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("nome", models.CharField(max_length=100)),
                (
                    "preco_adicional",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("ordem", models.PositiveIntegerField(default=0)),
                ("ativo", models.BooleanField(default=True)),
                (
                    "opcao",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="itens",
                        to="core.opcaopersonalizacao",
                    ),
                ),
            ],
            options={
                "verbose_name": "Item de Personalização",
                "verbose_name_plural": "Itens de Personalização",
                "db_table": "itens_personalizacao",
                "ordering": ["ordem"],
            },
        ),
        migrations.CreateModel(
            name="Pedido",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("numero", models.CharField(blank=True, max_length=20, unique=True)),
                ("cliente_nome", models.CharField(max_length=200)),
                ("cliente_celular", models.CharField(max_length=15)),
                ("cliente_email", models.EmailField(blank=True, max_length=254)),
                ("endereco_cep", models.CharField(blank=True, max_length=10)),
                ("endereco_logradouro", models.CharField(blank=True, max_length=200)),
                ("endereco_numero", models.CharField(blank=True, max_length=10)),
                ("endereco_complemento", models.CharField(blank=True, max_length=100)),
                ("endereco_bairro", models.CharField(blank=True, max_length=100)),
                ("endereco_cidade", models.CharField(blank=True, max_length=100)),
                ("endereco_estado", models.CharField(blank=True, max_length=2)),
                ("endereco_ponto_referencia", models.TextField(blank=True)),
                (
                    "tipo_entrega",
                    models.CharField(
                        choices=[
                            ("delivery", "Delivery"),
                            ("retirada", "Retirada no Local"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "forma_pagamento",
                    models.CharField(
                        choices=[
                            ("dinheiro", "Dinheiro"),
                            ("cartao_credito", "Cartão de Crédito"),
                            ("cartao_debito", "Cartão de Débito"),
                            ("pix", "PIX"),
                            ("vale_refeicao", "Vale Refeição"),
                            ("online", "Pagamento Online"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "troco_para",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "taxa_entrega",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "desconto",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "total",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("carrinho", "No Carrinho"),
                            ("pendente", "Pendente de Pagamento"),
                            ("confirmado", "Confirmado"),
                            ("preparando", "Preparando"),
                            ("pronto", "Pronto"),
                            ("saiu_entrega", "Saiu para Entrega"),
                            ("entregue", "Entregue"),
                            ("cancelado", "Cancelado"),
                            ("devolvido", "Devolvido"),
                        ],
                        default="carrinho",
                        max_length=20,
                    ),
                ),
                ("observacoes", models.TextField(blank=True)),
                ("observacoes_internas", models.TextField(blank=True)),
                ("data_agendamento", models.DateTimeField(blank=True, null=True)),
                (
                    "tempo_entrega_estimado",
                    models.PositiveIntegerField(
                        blank=True, help_text="Tempo em minutos", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("data_confirmacao", models.DateTimeField(blank=True, null=True)),
                ("data_entrega", models.DateTimeField(blank=True, null=True)),
                (
                    "cliente",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pedidos",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "endereco_entrega",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.endereco",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pedido",
                "verbose_name_plural": "Pedidos",
                "db_table": "pedidos",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ItemPedido",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("produto_nome", models.CharField(max_length=200)),
                ("produto_preco", models.DecimalField(decimal_places=2, max_digits=10)),
                ("quantidade", models.PositiveIntegerField(default=1)),
                (
                    "preco_unitario",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("subtotal", models.DecimalField(decimal_places=2, max_digits=10)),
                ("observacoes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "pedido",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="itens",
                        to="core.pedido",
                    ),
                ),
            ],
            options={
                "verbose_name": "Item do Pedido",
                "verbose_name_plural": "Itens do Pedido",
                "db_table": "itens_pedido",
            },
        ),
        migrations.CreateModel(
            name="HistoricoStatusPedido",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status_anterior",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("carrinho", "No Carrinho"),
                            ("pendente", "Pendente de Pagamento"),
                            ("confirmado", "Confirmado"),
                            ("preparando", "Preparando"),
                            ("pronto", "Pronto"),
                            ("saiu_entrega", "Saiu para Entrega"),
                            ("entregue", "Entregue"),
                            ("cancelado", "Cancelado"),
                            ("devolvido", "Devolvido"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status_novo",
                    models.CharField(
                        choices=[
                            ("carrinho", "No Carrinho"),
                            ("pendente", "Pendente de Pagamento"),
                            ("confirmado", "Confirmado"),
                            ("preparando", "Preparando"),
                            ("pronto", "Pronto"),
                            ("saiu_entrega", "Saiu para Entrega"),
                            ("entregue", "Entregue"),
                            ("cancelado", "Cancelado"),
                            ("devolvido", "Devolvido"),
                        ],
                        max_length=20,
                    ),
                ),
                ("observacoes", models.TextField(blank=True)),
                ("data_mudanca", models.DateTimeField(auto_now_add=True)),
                (
                    "usuario",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "pedido",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="historico_status",
                        to="core.pedido",
                    ),
                ),
            ],
            options={
                "verbose_name": "Histórico de Status",
                "verbose_name_plural": "Histórico de Status",
                "db_table": "historico_status_pedido",
                "ordering": ["-data_mudanca"],
            },
        ),
        migrations.CreateModel(
            name="AvaliacaoPedido",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "nota_comida",
                    models.PositiveIntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)]
                    ),
                ),
                (
                    "nota_entrega",
                    models.PositiveIntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)]
                    ),
                ),
                (
                    "nota_geral",
                    models.PositiveIntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)]
                    ),
                ),
                ("comentario", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "pedido",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="avaliacao",
                        to="core.pedido",
                    ),
                ),
            ],
            options={
                "verbose_name": "Avaliação do Pedido",
                "verbose_name_plural": "Avaliações dos Pedidos",
                "db_table": "avaliacoes_pedido",
            },
        ),
        migrations.CreateModel(
            name="PersonalizacaoItemPedido",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("opcao_nome", models.CharField(max_length=100)),
                ("item_nome", models.CharField(max_length=100)),
                (
                    "preco_adicional",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "item_pedido",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="personalizacoes",
                        to="core.itempedido",
                    ),
                ),
                (
                    "item_personalizacao",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.itempersonalizacao",
                    ),
                ),
            ],
            options={
                "verbose_name": "Personalização do Item",
                "verbose_name_plural": "Personalizações dos Itens",
                "db_table": "personalizacoes_item_pedido",
            },
        ),
        migrations.CreateModel(
            name="Produto",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("nome", models.CharField(max_length=200)),
                ("slug", models.SlugField(blank=True, max_length=200)),
                ("descricao", models.TextField()),
                ("preco", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "preco_promocional",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "imagem_principal",
                    models.ImageField(blank=True, null=True, upload_to="produtos/"),
                ),
                (
                    "destaque",
                    models.BooleanField(
                        default=False, help_text="Produto em destaque na página inicial"
                    ),
                ),
                ("disponivel", models.BooleanField(default=True)),
                ("permite_observacoes", models.BooleanField(default=True)),
                (
                    "tempo_preparo",
                    models.PositiveIntegerField(
                        default=15, help_text="Tempo em minutos"
                    ),
                ),
                ("calorias", models.PositiveIntegerField(blank=True, null=True)),
                ("ingredientes", models.TextField(blank=True)),
                (
                    "alergicos",
                    models.TextField(
                        blank=True, help_text="Informações sobre alérgenos"
                    ),
                ),
                ("ordem", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "categoria",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="produtos",
                        to="core.categoria",
                    ),
                ),
            ],
            options={
                "verbose_name": "Produto",
                "verbose_name_plural": "Produtos",
                "db_table": "produtos",
                "ordering": ["ordem", "nome"],
            },
        ),
        migrations.AddField(
            model_name="opcaopersonalizacao",
            name="produto",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="opcoes_personalizacao",
                to="core.produto",
            ),
        ),
        migrations.AddField(
            model_name="itempedido",
            name="produto",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.produto"
            ),
        ),
        migrations.CreateModel(
            name="ImagemProduto",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("imagem", models.ImageField(upload_to="produtos/galeria/")),
                ("ordem", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "produto",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="imagens",
                        to="core.produto",
                    ),
                ),
            ],
            options={
                "verbose_name": "Imagem do Produto",
                "verbose_name_plural": "Imagens dos Produtos",
                "db_table": "imagens_produtos",
                "ordering": ["ordem"],
            },
        ),
        migrations.CreateModel(
            name="Restaurante",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("nome", models.CharField(max_length=200)),
                ("slug", models.SlugField(blank=True, max_length=200, unique=True)),
                ("descricao", models.TextField()),
                (
                    "logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="restaurantes/logos/"
                    ),
                ),
                (
                    "banner",
                    models.ImageField(
                        blank=True, null=True, upload_to="restaurantes/banners/"
                    ),
                ),
                (
                    "favicon",
                    models.ImageField(
                        blank=True, null=True, upload_to="restaurantes/favicons/"
                    ),
                ),
                ("slogan", models.CharField(blank=True, max_length=200)),
                ("telefone", models.CharField(max_length=15)),
                ("whatsapp", models.CharField(blank=True, max_length=15)),
                ("email", models.EmailField(max_length=254)),
                ("cep", models.CharField(max_length=10)),
                ("logradouro", models.CharField(max_length=200)),
                ("numero", models.CharField(max_length=10)),
                ("complemento", models.CharField(blank=True, max_length=100)),
                ("bairro", models.CharField(max_length=100)),
                ("cidade", models.CharField(max_length=100)),
                ("estado", models.CharField(max_length=2)),
                (
                    "tipo_servico",
                    models.CharField(
                        choices=[
                            ("delivery", "Delivery"),
                            ("balcao", "Balcão"),
                            ("ambos", "Delivery + Balcão"),
                        ],
                        default="ambos",
                        max_length=20,
                    ),
                ),
                (
                    "taxa_entrega",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "valor_minimo_pedido",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "tempo_entrega_min",
                    models.PositiveIntegerField(
                        default=30, help_text="Tempo em minutos"
                    ),
                ),
                (
                    "tempo_entrega_max",
                    models.PositiveIntegerField(
                        default=60, help_text="Tempo em minutos"
                    ),
                ),
                (
                    "cor_primaria",
                    models.CharField(
                        default="#dc3545", help_text="Cor primária em hex", max_length=7
                    ),
                ),
                (
                    "cor_secundaria",
                    models.CharField(
                        default="#6c757d",
                        help_text="Cor secundária em hex",
                        max_length=7,
                    ),
                ),
                (
                    "cor_destaque",
                    models.CharField(
                        default="#ffc107",
                        help_text="Cor de destaque em hex",
                        max_length=7,
                    ),
                ),
                ("aceita_agendamento", models.BooleanField(default=False)),
                ("aceita_pagamento_online", models.BooleanField(default=True)),
                ("aceita_pagamento_entrega", models.BooleanField(default=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ativo", "Ativo"),
                            ("inativo", "Inativo"),
                            ("manutencao", "Em Manutenção"),
                        ],
                        default="ativo",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "funcionarios",
                    models.ManyToManyField(
                        blank=True,
                        related_name="trabalha_em",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "proprietario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="restaurantes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Restaurante",
                "verbose_name_plural": "Restaurantes",
                "db_table": "restaurantes",
            },
        ),
        migrations.AddField(
            model_name="produto",
            name="restaurante",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="produtos",
                to="core.restaurante",
            ),
        ),
        migrations.AddField(
            model_name="pedido",
            name="restaurante",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="pedidos",
                to="core.restaurante",
            ),
        ),
        migrations.AddField(
            model_name="categoria",
            name="restaurante",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="categorias",
                to="core.restaurante",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="produto",
            unique_together={("restaurante", "slug")},
        ),
        migrations.CreateModel(
            name="HorarioFuncionamento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dia_semana",
                    models.IntegerField(
                        choices=[
                            (0, "Segunda-feira"),
                            (1, "Terça-feira"),
                            (2, "Quarta-feira"),
                            (3, "Quinta-feira"),
                            (4, "Sexta-feira"),
                            (5, "Sábado"),
                            (6, "Domingo"),
                        ]
                    ),
                ),
                ("hora_abertura", models.TimeField()),
                ("hora_fechamento", models.TimeField()),
                ("ativo", models.BooleanField(default=True)),
                (
                    "restaurante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="horarios",
                        to="core.restaurante",
                    ),
                ),
            ],
            options={
                "verbose_name": "Horário de Funcionamento",
                "verbose_name_plural": "Horários de Funcionamento",
                "db_table": "horarios_funcionamento",
                "unique_together": {("restaurante", "dia_semana")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="categoria",
            unique_together={("restaurante", "slug")},
        ),
    ]
